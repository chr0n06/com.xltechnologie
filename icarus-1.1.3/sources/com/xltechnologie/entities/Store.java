package com.xltechnologie.entities;
// Generated 2018-11-05 17:37:51 by Hibernate Tools 4.3.1

import com.xltechnologie.dao.CategoryDAO;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.Table;
import org.hibernate.annotations.NamedQueries;
import org.hibernate.annotations.NamedQuery;

/**
 * Store generated by hbm2java
 */
@Entity
@Table(name = "store",
        catalog = "dbo"
)
@NamedQueries({
    @NamedQuery(
            name = "selectAllStore",
            query = "from Store s"
    )
})
public class Store implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private long id;
    @Column(name = "name")
    private String name;
    @Column(name = "phone")
    private String phone;

    @ManyToMany(cascade = {CascadeType.ALL})
    @JoinTable(
            name = "store-category",
            joinColumns = {
                @JoinColumn(name = "store_id")},
            inverseJoinColumns = {
                @JoinColumn(name = "category_id")}
    )
    private Set<Category> categories = new HashSet<>();

    //private Set spendings = new HashSet(0);
    //private Set locations = new HashSet(0);
    public Store() {
    }

    public Store(String name) {
        this.name = name;
    }

    public Store(String name, String phone) {
        this.name = name;
        this.phone = phone;
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public Set<Category> getCategories() {
        return categories;
    }

    public void setCategories(Set<Category> categories) {
        this.categories = categories;
    }
    public void setCategories(Long id) {
        CategoryDAO categoryDAO = new CategoryDAO();
        Set<Category> categories = categoryDAO.getAllCategoriesByStoreIDSet(id);
        this.categories = categories;
    }

    @Override
    public String toString() {
        return "Store{" + "id=" + id + ", name=" + name + ", phone=" + phone + '}';
    }

}
